{"version":3,"file":"nameUtils.test.js","sourceRoot":"","sources":["../../src/test/nameUtils.test.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,8DAAgD;AAEhD,IAAI,CAAC,wCAAwC,EAAE,GAAG,EAAE;IAClD,MAAM,CAAC,SAAS,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpE,MAAM,CAAC,SAAS,CAAC,2BAA2B,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpE,MAAM,CAAC,SAAS,CAAC,2BAA2B,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1E,MAAM,CAAC,SAAS,CAAC,2BAA2B,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzE,MAAM,CAAC,SAAS,CAAC,2BAA2B,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAE9E,0EAA0E;IAC1E,MAAM,CACJ,SAAS,CAAC,2BAA2B,CACnC,sGAAsG,CACvG,CACF,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,MAAM,CACJ,SAAS,CAAC,2BAA2B,CACnC,uGAAuG,CACxG,CACF,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,wCAAwC,EAAE,GAAG,EAAE;IAClD,MAAM,CAAC,SAAS,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvE,MAAM,CAAC,SAAS,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrE,MAAM,CAAC,SAAS,CAAC,yBAAyB,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAC9D,cAAc,CACf,CAAC;IACF,MAAM,CAAC,SAAS,CAAC,yBAAyB,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAC9D,cAAc,CACf,CAAC;IACF,MAAM,CAAC,SAAS,CAAC,yBAAyB,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAClE,kBAAkB,CACnB,CAAC;IACF,MAAM,CAAC,SAAS,CAAC,yBAAyB,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAC3E,2BAA2B,CAC5B,CAAC;IAEF,MAAM,CACJ,SAAS,CAAC,yBAAyB,CACjC,sGAAsG,CACvG,CACF,CAAC,IAAI,CACJ,sGAAsG,CACvG,CAAC;IAEF,iEAAiE;IACjE,MAAM,CACJ,SAAS,CAAC,yBAAyB,CACjC,uGAAuG,CACxG,CACF,CAAC,IAAI,CACJ,sGAAsG,CACvG,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * @format\n */\n\nimport * as nameUtils from '../utils/nameUtils';\n\ntest('Verify telemetry package name is valid', () => {\n  expect(nameUtils.isValidTelemetryPackageName('package')).toBe(true);\n  expect(nameUtils.isValidTelemetryPackageName('@react')).toBe(false);\n  expect(nameUtils.isValidTelemetryPackageName('react-native')).toBe(false);\n  expect(nameUtils.isValidTelemetryPackageName('react_native')).toBe(true);\n  expect(nameUtils.isValidTelemetryPackageName('react_native/cli')).toBe(false);\n\n  // Check for size limits. A valid package name has 100 characters or less.\n  expect(\n    nameUtils.isValidTelemetryPackageName(\n      'react_native_react_native_react_native_react_native_react_native_react_native_react_native_react_nat',\n    ),\n  ).toBe(true);\n  expect(\n    nameUtils.isValidTelemetryPackageName(\n      'react_native_react_native_react_native_react_native_react_native_react_native_react_native_react_nati',\n    ),\n  ).toBe(false);\n});\n\ntest('Verify telemetry package name cleaning', () => {\n  expect(nameUtils.cleanTelemetryPackageName('package')).toBe('package');\n  expect(nameUtils.cleanTelemetryPackageName('@react')).toBe('_react');\n  expect(nameUtils.cleanTelemetryPackageName('react-native')).toBe(\n    'react_native',\n  );\n  expect(nameUtils.cleanTelemetryPackageName('react_native')).toBe(\n    'react_native',\n  );\n  expect(nameUtils.cleanTelemetryPackageName('react_native/cli')).toBe(\n    'react_native_cli',\n  );\n  expect(nameUtils.cleanTelemetryPackageName('@react-native-windows/cli')).toBe(\n    '_react_native_windows_cli',\n  );\n\n  expect(\n    nameUtils.cleanTelemetryPackageName(\n      'react_native_react_native_react_native_react_native_react_native_react_native_react_native_react_nat',\n    ),\n  ).toBe(\n    'react_native_react_native_react_native_react_native_react_native_react_native_react_native_react_nat',\n  );\n\n  // Truncate a package name with 101 characters, to the first 100.\n  expect(\n    nameUtils.cleanTelemetryPackageName(\n      'react_native_react_native_react_native_react_native_react_native_react_native_react_native_react_nati',\n    ),\n  ).toBe(\n    'react_native_react_native_react_native_react_native_react_native_react_native_react_native_react_nat',\n  );\n});\n"]}