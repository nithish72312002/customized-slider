{"version":3,"file":"nameHelpers.js","sourceRoot":"","sources":["../../src/utils/nameHelpers.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;;;;AAEH,oDAAuB;AAEvB,SAAS,UAAU,CAAC,GAAW;IAC7B,MAAM,SAAS,GAAG,gBAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACnC,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC;AAED,SAAgB,kBAAkB,CAAC,IAAY;IAC7C,IAAI,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,EAAE;QACpC,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AALD,gDAKC;AAED,SAAgB,SAAS,CAAC,GAAW;IACnC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,sCAAsC;IAClE,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,uBAAuB;IAClE,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,wBAAwB;IAC/C,OAAO,GAAG,CAAC;AACb,CAAC;AALD,8BAKC;AAED,SAAgB,uBAAuB,CAAC,SAAiB;IACvD,IACE,SAAS;SACN,KAAK,CAAC,MAAM,CAAC;SACb,GAAG,CAAC,kBAAkB,CAAC;SACvB,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAChB;QACA,oEAAoE;QACpE,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAXD,0DAWC;AAED,SAAgB,cAAc,CAAC,GAAW;IACxC,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrD,CAAC;AAFD,wCAEC","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n * @format\n */\n\nimport _ from 'lodash';\n\nfunction pascalCase(str: string): string {\n  const camelCase = _.camelCase(str);\n  return camelCase[0].toUpperCase() + camelCase.substr(1);\n}\n\nexport function isValidProjectName(name: string): boolean {\n  if (name.match(/^[a-z][a-z0-9]*$/gi)) {\n    return true;\n  }\n  return false;\n}\n\nexport function cleanName(str: string): string {\n  str = str.replace('@', ''); // Remove '@' from package scope names\n  str = str.slice(str.lastIndexOf('/') + 1); // Remove package scope\n  str = pascalCase(str); // Convert to PascalCase\n  return str;\n}\n\nexport function isValidProjectNamespace(namespace: string): boolean {\n  if (\n    namespace\n      .split(/[.]+/)\n      .map(isValidProjectName)\n      .every(x => x)\n  ) {\n    // Validate that every part of the namespace is a valid project name\n    return true;\n  }\n  return false;\n}\n\nexport function cleanNamespace(str: string): string {\n  return str.split(/[.:]+/).map(cleanName).join('.');\n}\n"]}